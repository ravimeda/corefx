{
    "build": [
        {
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "Delete 'corefx'",
            "timeoutInMinutes": 0,
            "task": {
                "id": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "versionSpec": "1.*",
                "definitionType": "task"
            },
            "inputs": {
                "scriptType": "inlineScript",
                "scriptName": "",
                "arguments": "-path $(build.SourcesDirectory)\\corefx",
                "inlineScript": "param($path)\n\nif (Test-Path $path){\n    # this will print out an error each time a file can't be deleted.\n    Remove-Item -Recurse -Force $path\n }\n\nif (Test-Path $path){\n    # in case corefx is still alive\n    .\\diag_tools\\handle.exe -accepteula $path\n }",
                "workingFolder": "",
                "failOnStandardError": "true"
            }
        },
        {
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "git clone",
            "timeoutInMinutes": 0,
            "task": {
                "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
                "versionSpec": "1.*",
                "definitionType": "task"
            },
            "inputs": {
                "filename": "$(PB_Git)",
                "arguments": "clone $(PB_VsoCorefxGitUrl) corefx",
                "workingFolder": "",
                "failOnStandardError": "false"
            }
        },
        {
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "git checkout",
            "timeoutInMinutes": 0,
            "task": {
                "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
                "versionSpec": "1.*",
                "definitionType": "task"
            },
            "inputs": {
                "filename": "$(PB_Git)",
                "arguments": "checkout $(SourceVersion)",
                "workingFolder": "corefx",
                "failOnStandardError": "false"
            }
        },
        {
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "Install Signing Plugin",
            "timeoutInMinutes": 0,
            "task": {
                "id": "30666190-6959-11e5-9f96-f56098202fef",
                "versionSpec": "1.*",
                "definitionType": "task"
            },
            "inputs": {
                "signType": "$(PB_SignType)",
                "zipSources": "false",
                "version": "",
                "feedSource": "https://devdiv.pkgs.visualstudio.com/DefaultCollection/_packaging/MicroBuildToolset/nuget/v3/index.json"
            }
        },
        {
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "Run $(Build.SourcesDirectory)\\corefx\\clean.cmd",
            "timeoutInMinutes": 0,
            "task": {
                "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
                "versionSpec": "1.*",
                "definitionType": "task"
            },
            "inputs": {
                "filename": "$(Build.SourcesDirectory)\\corefx\\clean.cmd",
                "arguments": "-all",
                "workingFolder": "corefx",
                "failOnStandardError": "false"
            }
        },
        {
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "Run $(Build.SourcesDirectory)\\corefx\\sync.cmd",
            "timeoutInMinutes": 0,
            "task": {
                "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
                "versionSpec": "1.*",
                "definitionType": "task"
            },
            "inputs": {
                "filename": "$(Build.SourcesDirectory)\\corefx\\sync.cmd",
                "arguments": "$(PB_SyncArguments) $(PB_OptionalToolingSyncArguments) $(PB_PipelineBuildMSBuildArguments)",
                "workingFolder": "corefx",
                "failOnStandardError": "false"
            }
        },
        {
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "Generate Version Assets",
            "timeoutInMinutes": 0,
            "task": {
                "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
                "versionSpec": "1.*",
                "definitionType": "task"
            },
            "inputs": {
                "filename": "$(Build.SourcesDirectory)\\corefx\\build-managed.cmd",
                "arguments": "-GenerateVersion -OfficialBuildId=$(OfficialBuildId)",
                "workingFolder": "corefx",
                "failOnStandardError": "false"
            }
        },
        {
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "Run $(Build.SourcesDirectory)\\corefx\\build.cmd",
            "timeoutInMinutes": 0,
            "task": {
                "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
                "versionSpec": "1.*",
                "definitionType": "task"
            },
            "inputs": {
                "filename": "$(Build.SourcesDirectory)\\corefx\\build.cmd",
                "arguments": "-OfficialBuildId=$(OfficialBuildId) $(PB_BuildArguments) $(PB_PipelineBuildMSBuildArguments)",
                "workingFolder": "corefx",
                "failOnStandardError": "false"
            }
        },
        {
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "Run $(Build.SourcesDirectory)\\corefx\\build-tests.cmd",
            "timeoutInMinutes": 0,
            "task": {
                "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
                "versionSpec": "1.*",
                "definitionType": "task"
            },
            "inputs": {
                "filename": "$(Build.SourcesDirectory)\\corefx\\build-tests.cmd",
                "arguments": "$(PB_BuildTestsArguments)",
                "workingFolder": "corefx",
                "failOnStandardError": "false"
            }
        },
        {
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "Create Helix Test Jobs",
            "timeoutInMinutes": 0,
            "task": {
                "id": "c6c4c611-aa2e-4a33-b606-5eaba2196824",
                "versionSpec": "1.*",
                "definitionType": "task"
            },
            "inputs": {
                "solution": "$(Build.SourcesDirectory)\\corefx\\src\\upload-tests.proj",
                "platform": "",
                "configuration": "",
                "msbuildArguments": "$(PB_CreateHelixArguments) /p:\"Branch=$(SourceBranch)\" /p:\"CloudDropConnectionString=DefaultEndpointsProtocol=https;AccountName=$(PB_CloudDropAccountName);AccountKey=$(CloudDropAccessToken);EndpointSuffix=core.windows.net\" /p:\"CloudResultsConnectionString=DefaultEndpointsProtocol=https;AccountName=$(PB_CloudResultsAccountName);AccountKey=$(OutputCloudResultsAccessToken);EndpointSuffix=core.windows.net\" /p:\"HelixApiAccessKey=$(HelixApiAccessKey)\" /p:\"HelixApiEndpoint=$(PB_HelixApiEndPoint)\" /p:\"OfficialBuildId=$(OfficialBuildId)\"",
                "clean": "false",
                "maximumCpuCount": "false",
                "restoreNugetPackages": "false",
                "logProjectEvents": "false",
                "createLogFile": "false",
                "msbuildLocationMethod": "version",
                "msbuildVersion": "14.0",
                "msbuildArchitecture": "x64",
                "msbuildLocation": ""
            }
        },
        {
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "Push packages to Azure",
            "timeoutInMinutes": 0,
            "task": {
                "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
                "versionSpec": "1.*",
                "definitionType": "task"
            },
            "inputs": {
                "filename": "$(Build.SourcesDirectory)\\corefx\\publish-packages.cmd",
                "arguments": "-AzureAccount=$(PB_CloudDropAccountName) -AzureToken=$(CloudDropAccessToken) -Container=$(PB_Label) -- /p:OverwriteOnPublish=false",
                "workingFolder": "corefx",
                "failOnStandardError": "false"
            }
        },
        {
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": true,
            "displayName": "Copy Publish Artifact: BuildLogs",
            "timeoutInMinutes": 0,
            "task": {
                "id": "1d341bb0-2106-458c-8422-d00bcea6512a",
                "versionSpec": "1.*",
                "definitionType": "task"
            },
            "inputs": {
                "CopyRoot": "",
                "Contents": "*.log\ncorefx\\*.log\ncorefx\\src\\*.log",
                "ArtifactName": "BuildLogs",
                "ArtifactType": "Container",
                "TargetPath": "\\\\my\\share\\$(Build.DefinitionName)\\$(Build.BuildNumber)"
            }
        },
        {
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "Index symbol sources",
            "timeoutInMinutes": 0,
            "task": {
                "id": "0675668a-7bba-4ccb-901d-5ad6554ca653",
                "versionSpec": "1.*",
                "definitionType": "task"
            },
            "inputs": {
                "SymbolsPath": "",
                "SearchPattern": "corefx\\bin\\*$(PB_Platform).$(PB_ConfigurationGroup)\\**\\*.pdb",
                "SymbolsFolder": "",
                "SkipIndexing": "false",
                "TreatNotIndexedAsWarning": "false",
                "SymbolsMaximumWaitTime": "",
                "SymbolsProduct": "",
                "SymbolsVersion": "",
                "SymbolsArtifactName": "Symbols_$(PB_ConfigurationGroup)"
            }
        },
        {
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "Generate .rsp files",
            "timeoutInMinutes": 0,
            "condition": "and(succeeded(), eq(variables['IncludeSecurityExtensions'], 'true'))",
            "task": {
                "id": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                "versionSpec": "1.*",
                "definitionType": "task"
            },
            "inputs": {
                "scriptType": "inlineScript",
                "scriptName": "",
                "arguments": "",
                "workingFolder": "",
                "inlineScript": "echo \"/v\" | Out-File fxcop.rsp\ngci -recurse | % {\nif ($_.Name.ToLower().EndsWith(\".exe\") -or $_.Name.ToLower().EndsWith(\".dll\")) {\necho \"/f:$($_.FullName)\" | out-file -append fxcop.rsp\n}\n}",
                "failOnStandardError": "true"
            }
        },
        {
            "enabled": true,
            "continueOnError": true,
            "alwaysRun": false,
            "displayName": "Run Auto Applicability",
            "timeoutInMinutes": 0,
            "condition": "and(succeeded(), eq(variables['IncludeSecurityExtensions'], 'true'))",
            "task": {
                "id": "7f579cc9-a33b-4061-a506-9702d139f221",
                "versionSpec": "1.*",
                "definitionType": "task"
            },
            "inputs": {
                "ApplyRules": "Microsoft.Security",
                "ExternalRelease": "true",
                "InternalRelease": "true",
                "IsService": "false",
                "IsSoftware": "true",
                "DataSensitivity": "none",
                "IsCertAuthority": "false",
                "IsCodeSigner": "true",
                "UsesHSM": "false",
                "toolVersion": "Latest"
            }
        },
        {
            "enabled": true,
            "continueOnError": true,
            "alwaysRun": false,
            "displayName": "Run BinSkim ",
            "timeoutInMinutes": 0,
            "condition": "and(succeeded(), eq(variables['IncludeSecurityExtensions'], 'true'))",
            "task": {
                "id": "3056813a-40e9-4b2f-8f6b-612d1bc4e045",
                "versionSpec": "3.*",
                "definitionType": "task"
            },
            "inputs": {
                "InputType": "CommandLine",
                "arguments": "analyze $(Build.SourcesDirectory)\\corefx\\bin\\*.dll --recurse",
                "Function": "analyze",
                "AnalyzeTarget": "$(Build.ArtifactStagingDirectory)",
                "AnalyzeSymPath": "$(Build.SourcesDirectory)\\corefx\\bin\\AnyOS.AnyCPU.Debug;SRV*http://symweb",
                "AnalyzeConfigPath": "default",
                "AnalyzePluginPath": "",
                "AnalyzeRecurse": "true",
                "AnalyzeVerbose": "true",
                "AnalyzeHashes": "true",
                "AnalyzeStatistics": "false",
                "AnalyzeEnvironment": "false",
                "ExportRulesOutputType": "SARIF",
                "DumpTarget": "$(Build.ArtifactStagingDirectory)",
                "DumpRecurse": "true",
                "DumpVerbose": "true",
                "toolVersion": "Latest"
            }
        },
        {
            "enabled": true,
            "continueOnError": true,
            "alwaysRun": false,
            "displayName": "Run CodeMetrics ",
            "timeoutInMinutes": 0,
            "condition": "and(succeeded(), eq(variables['IncludeSecurityExtensions'], 'true'))",
            "task": {
                "id": "d72a577f-47a3-4634-86be-d7d8a535dd1a",
                "versionSpec": "1.*",
                "definitionType": "task"
            },
            "inputs": {
                "Files": "$(Build.SourcesDirectory)\\corefx\\bin\\**\\*.dll",
                "SearchGac": "true",
                "IgnoreInvalidTargets": "true",
                "IgnoreGeneratedCode": "true",
                "Directory": "$(Build.SourcesDirectory)\\corefx\\bin",
                "Reference": "",
                "Platform": "",
                "Quiet": "false",
                "toolVersion": "Latest"
            }
        },
        {
            "enabled": true,
            "continueOnError": true,
            "alwaysRun": false,
            "displayName": "Run CredScan",
            "timeoutInMinutes": 0,
            "condition": "and(succeeded(), eq(variables['IncludeSecurityExtensions'], 'true'))",
            "task": {
                "id": "ea576cd4-c61f-48f8-97e7-a3cb07b90a6f",
                "versionSpec": "2.*",
                "definitionType": "task"
            },
            "inputs": {
                "outputFormat": "pre",
                "toolVersion": "Latest",
                "scanFolder": "$(Build.SourcesDirectory)",
                "searchersFileType": "Default",
                "searchersFile": "",
                "suppressionsFile": "",
                "suppressAsError": "false",
                "batchSize": ""
            }
        },
        {
            "enabled": true,
            "continueOnError": true,
            "alwaysRun": false,
            "displayName": "Run FxCop",
            "timeoutInMinutes": 0,
            "condition": "and(succeeded(), eq(variables['IncludeSecurityExtensions'], 'true'))",
            "task": {
                "id": "0f6c0e13-d60d-4668-b829-0c875e47a5bb",
                "versionSpec": "2.*",
                "definitionType": "task"
            },
            "inputs": {
                "inputType": "CommandLine",
                "arguments": "@fxcop.rsp",
                "targets": "",
                "recursive": "true",
                "ruleset": "None",
                "customRulesets": "",
                "directory": "",
                "reference": "",
                "platform": "",
                "types": "",
                "timeout": "",
                "customRuleAssemblies": "",
                "enableRules": "",
                "disableRules": "",
                "searchGAC": "true",
                "ignoreInvalidTargets": "true",
                "ignoreGeneratedCode": "false",
                "aspNetOnly": "false",
                "failOnMissingRules": "false",
                "overrideRuleVisibilities": "false",
                "doNotSearchPlatformDirectories": "false",
                "reportMissingIndirectAssemblies": "false",
                "update": "false",
                "console": "true",
                "consoleXsl": "",
                "verbose": "false",
                "quiet": "false",
                "summary": "true",
                "toolVersion": "Latest"
            }
        },
        {
            "enabled": true,
            "continueOnError": true,
            "alwaysRun": false,
            "displayName": "Run APIScan",
            "timeoutInMinutes": 0,
            "condition": "and(succeeded(), eq(variables['IncludeSecurityExtensions'], 'true'))",
            "task": {
                "id": "9adea2b1-3752-438c-80c6-a6f0a812abdd",
                "versionSpec": "1.*",
                "definitionType": "task"
            },
            "inputs": {
                "targetMode": "binarysym",
                "softwareFolder": "$(Build.SourcesDirectory)\\corefx\\bin",
                "mpdFolder": "$(Build.SourcesDirectory)",
                "softwareName": "CoreFX",
                "softwareVersionNum": "TODO-Version",
                "softwareBuildNum": "TODO-Build",
                "modeType": "$(Parameters.modeType)",
                "noCopySymbols": "false",
                "noCopyBinaries": "false",
                "noDecompress": "false",
                "exclusionList": "",
                "email": "",
                "symbolsFolder": "$(Build.SourcesDirectory)\\corefx\\bin\\AnyOS.AnyCPU.Debug;SRV*http://symweb",
                "preBbtBinariesFolder": "",
                "preBbtSymbolsFolder": "",
                "isLargeApp": "false",
                "analyzerTimeout": "00:00:00",
                "toolVersion": "Latest"
            }
        },
        {
            "enabled": true,
            "continueOnError": true,
            "alwaysRun": false,
            "displayName": "Run PoliCheck",
            "timeoutInMinutes": 0,
            "condition": "and(succeeded(), eq(variables['IncludeSecurityExtensions'], 'true'))",
            "task": {
                "id": "d785890c-0d0d-46bd-8167-8fa9d49990c7",
                "versionSpec": "1.*",
                "definitionType": "task"
            },
            "inputs": {
                "inputType": "Basic",
                "cmdLineArgs": "/F:$(Build.SourcesDirectory) /T:9 /O:PoliCheck.xml",
                "targetType": "F",
                "targetArgument": "$(Build.SourcesDirectory)",
                "importEx": "",
                "termTypeT": "0029a9",
                "termTypeTCustom": "9",
                "termTypeK": "",
                "termTypeL": "",
                "EXGT": "false",
                "result": "PoliCheck.xml",
                "optionsFC": "1",
                "optionsXS": "1",
                "optionsCTGLEN": "",
                "optionsSEV": "",
                "optionsPE": "",
                "optionsHMENABLE": "",
                "optionsHPATH": "",
                "optionsHVER": "",
                "optionsRulesDBPath": "",
                "optionsRule": "",
                "optionsXCLASS": "",
                "optionsTASKNAME": "",
                "optionsWORKINGDIRECTORY": "",
                "optionsFTPATH": "",
                "optionsD": "",
                "optionsB1": "",
                "optionsB2": "",
                "optionsB3": "",
                "optionsOCDB": "",
                "toolVersion": "Latest"
            }
        },
        {
            "enabled": true,
            "continueOnError": true,
            "alwaysRun": false,
            "displayName": "Run the PREfast SDL Native Rules for MSBuild",
            "timeoutInMinutes": 0,
            "condition": "and(succeeded(), eq(variables['IncludeSecurityExtensions'], 'true'))",
            "task": {
                "id": "8d58a427-d09e-4313-a061-9f2e455d86f8",
                "versionSpec": "2.*",
                "definitionType": "task"
            },
            "inputs": {
                "toolVersion": "Latest"
            }
        },
        {
            "enabled": true,
            "continueOnError": true,
            "alwaysRun": false,
            "displayName": "Post Analysis",
            "timeoutInMinutes": 0,
            "condition": "and(succeeded(), eq(variables['IncludeSecurityExtensions'], 'true'))",
            "task": {
                "id": "f5679091-e6da-4974-a8dc-0eec03a8ea63",
                "versionSpec": "1.*",
                "definitionType": "task"
            },
            "inputs": {
                "APIScan": "true",
                "BinScope": "false",
                "BinSkim": "true",
                "BinSkimBreakOn": "Error",
                "CredScan": "true",
                "FortifySCA": "false",
                "FxCop": "true",
                "FxCopBreakOn": "ErrorAbove",
                "ModernCop": "false",
                "ModernCopBreakOn": "Error",
                "PoliCheck": "true",
                "PoliCheckBreakOn": "Severity1",
                "SDLNativeRules": "true"
            }
        },
        {
            "enabled": true,
            "continueOnError": true,
            "alwaysRun": false,
            "displayName": "Publish Security Analysis Logs",
            "timeoutInMinutes": 0,
            "condition": "and(succeeded(), eq(variables['IncludeSecurityExtensions'], 'true'))",
            "task": {
                "id": "4096c760-3a8a-435d-9689-88c0311bbc0e",
                "versionSpec": "2.*",
                "definitionType": "task"
            },
            "inputs": {
                "ArtifactName": "CodeAnalysisLogs",
                "ArtifactType": "Container",
                "TargetPath": "\\\\my\\share\\$(Build.DefinitionName)\\$(Build.BuildNumber)",
                "RvName": "",
                "ProductComponentName": "",
                "ProductVersionNumber": "",
                "PlatformName": "",
                "SDLToolName": "",
                "SDLToolResultFile": ""
            }
        },
        {
            "enabled": true,
            "continueOnError": true,
            "alwaysRun": false,
            "displayName": "TSA upload to Codebase: DotNet-CoreFx-Trusted_master Stamp: Azure",
            "timeoutInMinutes": 0,
            "condition": "and(succeeded(), eq(variables['IncludeSecurityExtensions'], 'true'))",
            "task": {
                "id": "3da26988-bb64-4a23-8f06-45531d297dae",
                "versionSpec": "1.*",
                "definitionType": "task"
            },
            "inputs": {
                "codebase": "NewOrUpdate",
                "tsaStamp": "Azure",
                "tsaWebApiUrl": "$(TSAStamp)",
                "codeBaseName": "DotNet-CoreFx-Trusted_master",
                "notificationAlias": "dncsec@microsoft.com",
                "codeBaseAdmins": "NORTHAMERICA\\raeda",
                "instanceUrlAzure": "MSAZURE",
                "instanceUrlBing": "",
                "instanceUrlCarbon": "",
                "instanceUrlDevDiv": "DEVDIV",
                "instanceUrlSkype": "",
                "instanceUrlTsa": "",
                "instanceUrlPpe": "",
                "projectNameDAIPVSTF": "",
                "projectNameDYNAMICSCRM": "",
                "projectNameMSAZURE": "One",
                "projectNameMSDYENG": "",
                "projectNameMSECG": "",
                "projectNameIDENTITYDIVISION": "",
                "projectNameVSTFRD": "",
                "projectNameMSASG": "",
                "projectNameMICROSOFTVSTS": "",
                "projectNameMSDATA": "",
                "projectNameMSENG": "",
                "projectNameDEVDIV": "DevDiv",
                "projectNameSKYPETEST2": "",
                "projectNameONEDRIVE": "",
                "projectNameSQLBUVSTS": "",
                "projectNamePOWERBI": "",
                "projectNameAZUREVSTFPPE": "",
                "projectNameSKYPE": "",
                "projectNameDOMOREEXP": "",
                "projectNameSQLBUVSTSTEST": "",
                "areaPath": "One\\DevDiv\\DotNetCore",
                "iterationPath": "One",
                "uploadAPIScan": "true",
                "uploadBinScope": "false",
                "uploadBinSkim": "true",
                "uploadCredScan": "true",
                "uploadFortifySCA": "false",
                "uploadFxCop": "true",
                "uploadModernCop": "false",
                "uploadPoliCheck": "true",
                "uploadPREfast": "true",
                "validateToolOutput": "Warning",
                "validateCompatibility": "Error",
                "uploadAsync": "true"
            }
        },
        {
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": true,
            "displayName": "Execute cleanup tasks",
            "timeoutInMinutes": 0,
            "task": {
                "id": "521a94ea-9e68-468a-8167-6dcf361ea776",
                "versionSpec": "1.*",
                "definitionType": "task"
            },
            "inputs": {}
        },
        {
            "enabled": true,
            "continueOnError": true,
            "alwaysRun": false,
            "displayName": "Final clean to remove any lingering process",
            "timeoutInMinutes": 0,
            "task": {
                "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
                "versionSpec": "1.*",
                "definitionType": "task"
            },
            "inputs": {
                "filename": "$(Build.SourcesDirectory)\\corefx\\clean.cmd",
                "arguments": "",
                "workingFolder": "corefx",
                "failOnStandardError": "false"
            }
        },
        {
            "enabled": true,
            "continueOnError": true,
            "alwaysRun": true,
            "displayName": "Build solution corefx\\Tools\\scripts\\vstsagent\\cleanupagent.proj",
            "timeoutInMinutes": 0,
            "task": {
                "id": "c6c4c611-aa2e-4a33-b606-5eaba2196824",
                "versionSpec": "1.*",
                "definitionType": "task"
            },
            "inputs": {
                "solution": "corefx\\Tools\\scripts\\vstsagent\\cleanupagent.proj",
                "platform": "",
                "configuration": "",
                "msbuildArguments": "/p:AgentDirectory=$(Agent.HomeDirectory) /p:DoClean=$(PB_CleanAgent)",
                "clean": "false",
                "maximumCpuCount": "false",
                "restoreNugetPackages": "false",
                "logProjectEvents": "false",
                "createLogFile": "false",
                "msbuildLocationMethod": "version",
                "msbuildVersion": "14.0",
                "msbuildArchitecture": "x86",
                "msbuildLocation": ""
            }
        }
    ],
  "options": [
    {
      "enabled": false,
      "definition": {
        "id": "5bc3cfb7-6b54-4a4b-b5d2-a3905949f8a6"
      },
      "inputs": {
        "additionalFields": "{}"
      }
    },
    {
      "enabled": false,
      "definition": {
        "id": "7c555368-ca64-4199-add6-9ebaf0b0137d"
      },
      "inputs": {
        "multipliers": "[]",
        "parallel": "false",
        "continueOnError": "true",
        "additionalFields": "{}"
      }
    },
    {
      "enabled": false,
      "definition": {
        "id": "a9db38f9-9fdc-478c-b0f9-464221e58316"
      },
      "inputs": {
        "workItemType": "234347",
        "assignToRequestor": "true",
        "additionalFields": "{}"
      }
    },
    {
      "enabled": false,
      "definition": {
        "id": "57578776-4c22-4526-aeb0-86b6da17ee9c"
      },
      "inputs": {
        "additionalFields": "{}"
      }
    }
  ],
  "variables": {
    "system.debug": {
      "value": "false",
      "allowOverride": true
    },
    "PB_ConfigurationGroup": {
      "value": "Debug",
      "allowOverride": true
    },
    "PB_Platform": {
      "value": "x64",
      "allowOverride": true
    },
    "PB_CloudDropAccountName": {
      "value": "dotnetbuildoutput"
    },
    "CloudDropAccessToken": {
      "value": null,
      "isSecret": true
    },
    "OfficialBuildId": {
      "value": "$(Build.BuildNumber)",
      "allowOverride": true
    },
    "PB_Label": {
      "value": "$(Build.BuildNumber)",
      "allowOverride": true
    },
    "SourceVersion": {
      "value": "HEAD",
      "allowOverride": true
    },
    "Build.Clean": {
      "value": "all"
    },
    "PB_VsoAccountName": {
      "value": "dn-bot"
    },
    "VsoPassword": {
      "value": null,
      "isSecret": true
    },
    "PB_VsoRepositoryName": {
      "value": "DotNet-CoreFX-Trusted",
      "allowOverride": true
    },
    "PB_VsoCorefxGitUrl": {
      "value": "https://github.com/dotnet/corefx"
    },
    "PB_SourceBranch": {
      "value": "master",
      "allowOverride": true
    },
    "PB_Git": {
      "value": "$(ProgramFiles)\\Git\\cmd\\git.exe"
    },
    "TeamName": {
      "value": "DotNetCore"
    },
    "PB_RuntimeOS": {
      "value": "win10"
    },
    "PB_CleanAgent": {
      "value": "true"
    },
    "PB_SyncArguments": {
      "value": "-p -- /p:ArchGroup=x64  /p:RuntimeOS=win10",
      "allowOverride": true
    },
    "PB_BuildArguments": {
      "value": "-buildArch=x64 -Release -- /p:SignType=test /p:RuntimeOS=win10",
      "allowOverride": true
    },
    "PB_BuildTestsArguments": {
      "value": "-buildArch=x64 -Release -SkipTests -- /p:RuntimeOS=win10",
      "allowOverride": true
    },
    "PB_CreateHelixArguments": {
      "value": "/t:CloudBuild /p:ArchGroup=x64 /p:ConfigurationGroup=Release /p:\"EnableCloudTest=true\" /p:\"BuildMoniker=none\" /p:\"TargetQueue=Windows.10.Amd64\" /p:\"TestProduct=corefx\" /p:\"TimeoutInSeconds=1200\" /p:\"TargetOS=Windows_NT\" /p:FilterToOSGroup=Windows_NT",
      "allowOverride": true
    },
    "PB_OptionalToolSource": {
      "value": null,
      "allowOverride": true,
      "isSecret": true
    },
    "PB_OptionalToolSourceUser": {
      "value": null,
      "allowOverride": true,
      "isSecret": true
    },
    "PB_OptionalToolSourcePAT": {
      "value": null,
      "allowOverride": true,
      "isSecret": true
    },
    "PB_OptionalToolingSyncArguments": {
      "value": "/p:OptionalToolSource=$(PB_OptionalToolSource) /p:OptionalToolSourceUser=$(PB_OptionalToolSourceUser);OptionalToolSourcePassword=$(PB_OptionalToolSourcePAT)"
    },
    "PB_PipelineBuildMSBuildArguments": {
      "value": "",
      "allowOverride": true
    }
  },
  "demands": [
    "Agent.OS -equals windows_nt"
  ],
  "retentionRules": [
    {
      "branches": [
        "+refs/heads/*"
      ],
      "artifacts": [
        "build.SourceLabel"
      ],
      "artifactTypesToDelete": [],
      "daysToKeep": 10,
      "minimumToKeep": 1,
      "deleteBuildRecord": true,
      "deleteTestResults": true
    }
  ],
  "buildNumberFormat": "$(date:yyyyMMdd)$(rev:-rr)",
  "jobAuthorizationScope": "projectCollection",
  "jobTimeoutInMinutes": 180,
  "repository": {
    "properties": {
      "labelSources": "0",
      "reportBuildStatus": "true",
      "fetchDepth": "0",
      "gitLfsSupport": "false",
      "skipSyncSource": "true",
      "cleanOptions": "3"
    },
    "id": "0a2b2664-c1be-429c-9b40-8a24dee27a4a",
    "type": "TfsGit",
    "name": "DotNet-BuildPipeline",
    "url": "https://devdiv.visualstudio.com/DevDiv/_git/DotNet-BuildPipeline",
    "defaultBranch": "refs/heads/master",
    "clean": "false",
    "checkoutSubmodules": false
  },
  "quality": "definition",
  "queue": {
    "pool": {
      "id": 39,
      "name": "DotNet-Build"
    },
    "id": 36,
    "name": "DotNet-Build"
  },
  "path": "\\",
  "type": "build",
  "id": 893,
  "name": "DotNet-CoreFx-Trusted-Windows",
  "project": {
    "id": "0bdbc590-a062-4c3f-b0f6-9383f67865ee",
    "name": "DevDiv",
    "description": "Visual Studio and DevDiv team project for git source code repositories.  Work items will be added for Adams, Dev14 work items are tracked in vstfdevdiv.  ",
    "url": "https://devdiv.visualstudio.com/DefaultCollection/_apis/projects/0bdbc590-a062-4c3f-b0f6-9383f67865ee",
    "state": "wellFormed",
    "revision": 418097607
  }
}
